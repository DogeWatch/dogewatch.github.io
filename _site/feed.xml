<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DogeWatch&#39;s Blog</title>
    <description></description>
    <link>http://dogewatch.github.io/</link>
    <atom:link href="http://dogewatch.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 19 Nov 2015 17:05:25 +0800</pubDate>
    <lastBuildDate>Thu, 19 Nov 2015 17:05:25 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>RCTF</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“here we go.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;这次RCTF只搞了web题，其他题完全没时间去碰啊。。&lt;br /&gt;
虽然这次天枢没能进决赛，只差一名，但是大家都努力了，希望下次能有更好成绩。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;web-1&quot;&gt;web 1&lt;/h2&gt;

&lt;p&gt;注册登陆进去后发现有上传，随后试验各种后缀名发现只有.jpg可以，顺便一提每次上传要过验证码真是蛋疼。&lt;br /&gt;
随便上传个文件后发现会返回文件名和uid(这个uid一开始没发现作用，后来看了tomato大牛的题解才明白是啥用，后面再说)&lt;br /&gt;
，随后会在上传的页面回显文件名。于是就在这里猜测是文件名有注入。在文件名后面加单引号成功上传，再次回到上传页面发现无任何文件名回显，因此猜测是二次注入。&lt;br /&gt;
随后开始注入，先来一发aaaaaa’+version()+’.jpg，发现返回文件名为5.1。&lt;br /&gt;
&lt;img src=&quot;/img/post/rctf-web1-1.png&quot; alt=&quot;img&quot; /&gt;&lt;br /&gt;
继续，测试select和from发现被过滤了，分别改成selselectect和frfromom可绕过，后来又发现所有的字母都不会显示，于是只能一位一位猜表名、列名和字段。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;payload：&#39;+(selselectect if((selselectect count(*) frfromom information_schema.tables)&amp;gt;0,2,3))+&#39;
&#39;+(selselectect if (1&amp;lt;2,ascii(mid((selselectect table_name frfromom information_schema.tables limit 29,1),1,1)),2))+&#39;
&#39;+(selselectect if (1&amp;lt;2,ascii(mid((selselectect I_am_flag frfromom hello_flag_is_here limit 0,1),1,1)),2))+&#39;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后得到flag，!!_@m_Th.e_F!lag。&lt;/p&gt;

&lt;p&gt;后来看tomato的题解发现，这题在insert的时候格式是(‘文件名’,’uid’,’uid’)，拖了一晚上验证码的我看到这真是哭了，&lt;br /&gt;
因为做的时候也想过用这种方式注入，但是死活没成功，还是太菜了啊。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;web-2&quot;&gt;web 2&lt;/h2&gt;

&lt;p&gt;注册的时候发现过滤了空格，注册一个账号aaaaa’“，然后进去发现一堆赵日天，叶良辰神马的然并卵的东西，最后在改密码的时候发现了报错。&lt;br /&gt;
&lt;img src=&quot;/img/post/rctf-web2-1.png&quot; alt=&quot;img&quot; /&gt;&lt;br /&gt;
明显的二次注入，用updatexml报错注入，先猜flag表，&lt;br /&gt;
“&amp;amp;&amp;amp;updatexml(0x7e,concat(0x7e,(select(flag)from(flag))),0)#，&lt;br /&gt;
告诉我flag is not here，真是哔了狗了。没办法，只有从表名开始猜了，因为报错注入只会返回一行，但是过滤了空格所以不能使用limit，&lt;br /&gt;
在这我又get了一个新的姿势，那就是用mysql的regexp正则匹配函数。直接regexp(‘flag’)找到表名，读取内容是只返回前几个字符，没办法，再次用regexp(‘RCTF’)成功读到flag。&lt;br /&gt;
RCTF{sql_1njecti0n_is_f4n_6666}&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;web-3&quot;&gt;web 3&lt;/h2&gt;

&lt;p&gt;注册一个账号，改密码的时候抓包发现可以修改要改密码的用户名，改成admin后登陆进去提示not allow ip，把XFF改成127.0.0.1后成功登陆。&lt;br /&gt;
进去发现叫我们猜action，果断猜upload出现一个上传页面，发现没有验证码真是感动哭了。随后fuzz出可用的后缀名php4,php5。&lt;br /&gt;
但是仍然提示不是真正的php，根据php的这几种格式，&lt;br /&gt;
&lt;code&gt;
&amp;lt;?php?&amp;gt;
&amp;lt;??&amp;gt;
&amp;lt;script language=&quot;php&quot;&amp;gt;&amp;lt;/script&amp;gt;
asp的&amp;lt;%%&amp;gt;
&lt;/code&gt;&lt;br /&gt;
挨个尝试，发现script标签可以于是成功拿到flag。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;web-4&quot;&gt;web 4&lt;/h2&gt;

&lt;p&gt;一开始没什么头绪，后来放出提示是nosql就猜测是mongodb，使用[$ne]和[$regex]跑出账号密码，ROIS_ADMIN pas5woRd_i5_45e2884c4e5b9df49c747e1d。&lt;br /&gt;
登陆进去后，看源码发现上传需要先过useragent和cookie的验证。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$Agent = $_SERVER[&#39;HTTP_USER_AGENT&#39;];
$backDoor = $_COOKIE[&#39;backdoor&#39;];
$msg = json_encode(&quot;no privilege&quot;);
$iterations = 1000;
$salt = &quot;roisctf&quot;;
$alg = &quot;sha1&quot;;
$keylen = &quot;20&quot;;
if ($Agent == $backDoor || strlen($Agent) != 65) {
    exit($msg);
}
if (substr($Agent,0,23) != &quot;rois_special_user_agent&quot;) {
    exit($msg);
}
if (pbkdf2($alg, $Agent, $salt, $iterations, $keylen) != pbkdf2($alg, $backDoor, $salt, $iterations, $keylen)) {
    exit($msg);
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜了一发php下的pbkdf2函数发现了一个hash_pbkdf2函数，也没多想就当作是一回事了，因为php的==是弱比较，所以想着只要找俩字符串加密后与0e1相等就行了。&lt;br /&gt;
于是就开始跑，跑出来后发现上传依然过不了，在这卡了好久。最后无奈去找客服搅基，客服说这个函数不是php的函数，他只是用php表示出来而已，囧。&lt;br /&gt;
最后搜到这篇&lt;a hef=&quot;https://mathiasbynens.be/notes/pbkdf2-hmac&quot;&gt;文章&lt;/a&gt;，用里面提供的脚本跑出一对字符串，rois_special_user_agentaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamipvkd&lt;br /&gt;
3-Rfm^Bq%3BZZAcl]mS&amp;amp;eE。&lt;br /&gt;
测试能成功上传了。然后下载提供的备份文件，打开发现是一个关于zip解压的php文件。找官网下了原生版本后diff了一下发现了一处不同点。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
if ($p_header[&#39;filename_len&#39;] != 0)  {
      $p_header[&#39;filename&#39;] = fread($this-&amp;gt;zip_fd, $p_header[&#39;filename_len&#39;]);
      $preNum = substr_count($p_header[&#39;filename&#39;], &#39;../&#39;);
      $prefix = str_repeat(&#39;../&#39;, $preNum);
      $element = explode(&#39;.&#39;, str_replace($prefix, &#39;&#39;, $p_header[&#39;filename&#39;]));
      $fname = $prefix . md5($element[0]. &#39;RoisFighting&#39;). &#39;.&#39; .end($element);
      $p_header[&#39;filename&#39;] = $fname;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;知道这是解压后对文件进行了重命名，于是尝试计算出文件名后拼接到给出的上传路径去访问发现是404。&lt;br /&gt;
多上传几次发现给出的路径都不一样，于是尝试构造一个解压后存放至上一级目录的zip文件，用winhex编辑zip压缩包，在里面文件名前三位改成../，成功上传得到flag。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-1&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;这次RCTF只撸了web里的四道题，后面的xss和500分的题完全没时间看了。看题解发现xss不是很难，不知道时间足够能做出来不。个人成绩依然是60多名，从今年的绿盟举办的CTF开始，陆续打了几次都是这个名次，相信积累足够技术和经验后能有进步。&lt;/p&gt;

</description>
        <pubDate>Thu, 19 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://dogewatch.github.io/2015/11/19/rctf-writeup/</link>
        <guid isPermaLink="true">http://dogewatch.github.io/2015/11/19/rctf-writeup/</guid>
        
        <category>ctf</category>
        
        <category>web</category>
        
        
      </item>
    
      <item>
        <title>Welcome to My Blog</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“黑喂狗。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;终于开博客咯，人生第一个博客。&lt;/p&gt;

&lt;p&gt;至于为什么挂在git上，其实是没钱买VPS &amp;gt;_&amp;lt;，先就酱吧。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-1&quot;&gt;正文&lt;/h2&gt;

&lt;p&gt;之前在一个大牛(貌似是pithon牛)的博客里看到他说他每天为了更新博客，不得不去不断地发现新的东西，研究新的姿势。&lt;/p&gt;

&lt;p&gt;看了后觉得很有道理。博客这种东西，不但是为了分享自己所得，也是为了促使自己进步。相信那句话，菜不要紧，整就行。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-2&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;博客的模板是照搬&lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot;&gt;HUX&lt;/a&gt;的博客。&lt;br /&gt;
个人感觉挺好看的，再加上前端设计姿势缺乏又懒得动手，所以只好照搬了，顺便说一句，Jekyll真是个好东西。&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://dogewatch.github.io/2015/11/19/hello-git/</link>
        <guid isPermaLink="true">http://dogewatch.github.io/2015/11/19/hello-git/</guid>
        
        <category>生活</category>
        
        
      </item>
    
  </channel>
</rss>
